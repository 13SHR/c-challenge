name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [ ${{ runner.os }} == 'Linux' ]; then
          sudo apt-get update && sudo apt-get install -y libsdl2-dev
        elif [ ${{ runner.os }} == 'macOS' ]; then
          brew install sdl2
        elif [ ${{ runner.os }} == 'Windows' ]; then
          choco install sdl2
        fi
      shell: bash

    - name: Build raylib
      run: |
        if [ ${{ runner.os }} == 'Linux' ]; then
          cd external/raylib/src
          sudo make clean
          sudo make PLATFORM=PLATFORM_DESKTOP_SDL
        elif [ ${{ runner.os }} == 'macOS' ]; then
          cd external/raylib/src
          make clean
          make PLATFORM=PLATFORM_DESKTOP_SDL
        elif [ ${{ runner.os }} == 'Windows' ]; then
          cd external/raylib/src
          mingw32-make clean
          mingw32-make PLATFORM=PLATFORM_DESKTOP_SDL
        fi
      shell: bash

    - name: Configure CMake
      run: |
        if [ ${{ runner.os }} == 'Windows' ]; then
          cmake -B %GITHUB_WORKSPACE%/build -DCMAKE_BUILD_TYPE=%BUILD_TYPE%
        else
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        fi
      shell: bash

    - name: Build
      # Build your program with the given configuration
      run: |
        if [ ${{ runner.os }} == 'Windows' ]; then
          cmake --build %GITHUB_WORKSPACE%/build --config %BUILD_TYPE%
        else
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        fi
      shell: bash

